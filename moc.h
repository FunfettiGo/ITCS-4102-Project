

#pragma once

#ifndef GO_MOC_H
#define GO_MOC_H

#include <stdint.h>

#ifdef __cplusplus
class App;
class MWidget;
class MWindow;
class MocLabel;
extern "C" {
#endif

struct Moc_PackedString { char* data; long long len; };
struct Moc_PackedList { void* data; long long len; };
int App_App_QRegisterMetaType();
int App_App_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int App_App_QmlRegisterType();
void* App___allWidgets_atList(void* ptr, int i);
void App___allWidgets_setList(void* ptr, void* i);
void* App___allWidgets_newList(void* ptr);
void* App___topLevelWidgets_atList(void* ptr, int i);
void App___topLevelWidgets_setList(void* ptr, void* i);
void* App___topLevelWidgets_newList(void* ptr);
void* App___screens_atList(void* ptr, int i);
void App___screens_setList(void* ptr, void* i);
void* App___screens_newList(void* ptr);
void* App___dynamicPropertyNames_atList(void* ptr, int i);
void App___dynamicPropertyNames_setList(void* ptr, void* i);
void* App___dynamicPropertyNames_newList(void* ptr);
void* App___findChildren_atList2(void* ptr, int i);
void App___findChildren_setList2(void* ptr, void* i);
void* App___findChildren_newList2(void* ptr);
void* App___findChildren_atList3(void* ptr, int i);
void App___findChildren_setList3(void* ptr, void* i);
void* App___findChildren_newList3(void* ptr);
void* App___findChildren_atList(void* ptr, int i);
void App___findChildren_setList(void* ptr, void* i);
void* App___findChildren_newList(void* ptr);
void* App___children_atList(void* ptr, int i);
void App___children_setList(void* ptr, void* i);
void* App___children_newList(void* ptr);
void* App_NewApp(int argc, char* argv);
void App_DestroyApp(void* ptr);
void App_DestroyAppDefault(void* ptr);
char App_EventDefault(void* ptr, void* e);
void App_AboutQtDefault(void* ptr);
void App_CloseAllWindowsDefault(void* ptr);
void App_SetAutoSipEnabledDefault(void* ptr, char enabled);
void App_SetStyleSheetDefault(void* ptr, char* sheet);
char App_AutoSipEnabledDefault(void* ptr);
void App_QuitDefault(void* ptr);
char App_EventFilterDefault(void* ptr, void* watched, void* event);
void App_ChildEventDefault(void* ptr, void* event);
void App_ConnectNotifyDefault(void* ptr, void* sign);
void App_CustomEventDefault(void* ptr, void* event);
void App_DeleteLaterDefault(void* ptr);
void App_DisconnectNotifyDefault(void* ptr, void* sign);
void App_TimerEventDefault(void* ptr, void* event);
;
int MWidget_MWidget_QRegisterMetaType();
int MWidget_MWidget_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int MWidget_MWidget_QmlRegisterType();
void* MWidget___addActions_actions_atList(void* ptr, int i);
void MWidget___addActions_actions_setList(void* ptr, void* i);
void* MWidget___addActions_actions_newList(void* ptr);
void* MWidget___insertActions_actions_atList(void* ptr, int i);
void MWidget___insertActions_actions_setList(void* ptr, void* i);
void* MWidget___insertActions_actions_newList(void* ptr);
void* MWidget___actions_atList(void* ptr, int i);
void MWidget___actions_setList(void* ptr, void* i);
void* MWidget___actions_newList(void* ptr);
void* MWidget___dynamicPropertyNames_atList(void* ptr, int i);
void MWidget___dynamicPropertyNames_setList(void* ptr, void* i);
void* MWidget___dynamicPropertyNames_newList(void* ptr);
void* MWidget___findChildren_atList2(void* ptr, int i);
void MWidget___findChildren_setList2(void* ptr, void* i);
void* MWidget___findChildren_newList2(void* ptr);
void* MWidget___findChildren_atList3(void* ptr, int i);
void MWidget___findChildren_setList3(void* ptr, void* i);
void* MWidget___findChildren_newList3(void* ptr);
void* MWidget___findChildren_atList(void* ptr, int i);
void MWidget___findChildren_setList(void* ptr, void* i);
void* MWidget___findChildren_newList(void* ptr);
void* MWidget___children_atList(void* ptr, int i);
void MWidget___children_setList(void* ptr, void* i);
void* MWidget___children_newList(void* ptr);
void* MWidget_NewMWidget(void* parent, long long fo);
void MWidget_DestroyMWidget(void* ptr);
char MWidget_CloseDefault(void* ptr);
char MWidget_EventDefault(void* ptr, void* event);
char MWidget_FocusNextPrevChildDefault(void* ptr, char next);
char MWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void MWidget_ActionEventDefault(void* ptr, void* event);
void MWidget_ChangeEventDefault(void* ptr, void* event);
void MWidget_CloseEventDefault(void* ptr, void* event);
void MWidget_ContextMenuEventDefault(void* ptr, void* event);
void MWidget_DragEnterEventDefault(void* ptr, void* event);
void MWidget_DragLeaveEventDefault(void* ptr, void* event);
void MWidget_DragMoveEventDefault(void* ptr, void* event);
void MWidget_DropEventDefault(void* ptr, void* event);
void MWidget_EnterEventDefault(void* ptr, void* event);
void MWidget_FocusInEventDefault(void* ptr, void* event);
void MWidget_FocusOutEventDefault(void* ptr, void* event);
void MWidget_HideDefault(void* ptr);
void MWidget_HideEventDefault(void* ptr, void* event);
void MWidget_InputMethodEventDefault(void* ptr, void* event);
void MWidget_KeyPressEventDefault(void* ptr, void* event);
void MWidget_KeyReleaseEventDefault(void* ptr, void* event);
void MWidget_LeaveEventDefault(void* ptr, void* event);
void MWidget_LowerDefault(void* ptr);
void MWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void MWidget_MouseMoveEventDefault(void* ptr, void* event);
void MWidget_MousePressEventDefault(void* ptr, void* event);
void MWidget_MouseReleaseEventDefault(void* ptr, void* event);
void MWidget_MoveEventDefault(void* ptr, void* event);
void MWidget_PaintEventDefault(void* ptr, void* event);
void MWidget_RaiseDefault(void* ptr);
void MWidget_RepaintDefault(void* ptr);
void MWidget_ResizeEventDefault(void* ptr, void* event);
void MWidget_SetDisabledDefault(void* ptr, char disable);
void MWidget_SetEnabledDefault(void* ptr, char vbo);
void MWidget_SetFocus2Default(void* ptr);
void MWidget_SetHiddenDefault(void* ptr, char hidden);
void MWidget_SetStyleSheetDefault(void* ptr, char* styleSheet);
void MWidget_SetVisibleDefault(void* ptr, char visible);
void MWidget_SetWindowModifiedDefault(void* ptr, char vbo);
void MWidget_SetWindowTitleDefault(void* ptr, char* vqs);
void MWidget_ShowDefault(void* ptr);
void MWidget_ShowEventDefault(void* ptr, void* event);
void MWidget_ShowFullScreenDefault(void* ptr);
void MWidget_ShowMaximizedDefault(void* ptr);
void MWidget_ShowMinimizedDefault(void* ptr);
void MWidget_ShowNormalDefault(void* ptr);
void MWidget_TabletEventDefault(void* ptr, void* event);
void MWidget_UpdateDefault(void* ptr);
void MWidget_UpdateMicroFocusDefault(void* ptr);
void MWidget_WheelEventDefault(void* ptr, void* event);
void* MWidget_PaintEngineDefault(void* ptr);
void* MWidget_MinimumSizeHintDefault(void* ptr);
void* MWidget_SizeHintDefault(void* ptr);
void* MWidget_InputMethodQueryDefault(void* ptr, long long query);
char MWidget_HasHeightForWidthDefault(void* ptr);
int MWidget_HeightForWidthDefault(void* ptr, int w);
int MWidget_MetricDefault(void* ptr, long long m);
char MWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void MWidget_ChildEventDefault(void* ptr, void* event);
void MWidget_ConnectNotifyDefault(void* ptr, void* sign);
void MWidget_CustomEventDefault(void* ptr, void* event);
void MWidget_DeleteLaterDefault(void* ptr);
void MWidget_DisconnectNotifyDefault(void* ptr, void* sign);
void MWidget_TimerEventDefault(void* ptr, void* event);
;
int MWindow_MWindow_QRegisterMetaType();
int MWindow_MWindow_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int MWindow_MWindow_QmlRegisterType();
void* MWindow___resizeDocks_docks_atList(void* ptr, int i);
void MWindow___resizeDocks_docks_setList(void* ptr, void* i);
void* MWindow___resizeDocks_docks_newList(void* ptr);
int MWindow___resizeDocks_sizes_atList(void* ptr, int i);
void MWindow___resizeDocks_sizes_setList(void* ptr, int i);
void* MWindow___resizeDocks_sizes_newList(void* ptr);
void* MWindow___tabifiedDockWidgets_atList(void* ptr, int i);
void MWindow___tabifiedDockWidgets_setList(void* ptr, void* i);
void* MWindow___tabifiedDockWidgets_newList(void* ptr);
void* MWindow___addActions_actions_atList(void* ptr, int i);
void MWindow___addActions_actions_setList(void* ptr, void* i);
void* MWindow___addActions_actions_newList(void* ptr);
void* MWindow___insertActions_actions_atList(void* ptr, int i);
void MWindow___insertActions_actions_setList(void* ptr, void* i);
void* MWindow___insertActions_actions_newList(void* ptr);
void* MWindow___actions_atList(void* ptr, int i);
void MWindow___actions_setList(void* ptr, void* i);
void* MWindow___actions_newList(void* ptr);
void* MWindow___dynamicPropertyNames_atList(void* ptr, int i);
void MWindow___dynamicPropertyNames_setList(void* ptr, void* i);
void* MWindow___dynamicPropertyNames_newList(void* ptr);
void* MWindow___findChildren_atList2(void* ptr, int i);
void MWindow___findChildren_setList2(void* ptr, void* i);
void* MWindow___findChildren_newList2(void* ptr);
void* MWindow___findChildren_atList3(void* ptr, int i);
void MWindow___findChildren_setList3(void* ptr, void* i);
void* MWindow___findChildren_newList3(void* ptr);
void* MWindow___findChildren_atList(void* ptr, int i);
void MWindow___findChildren_setList(void* ptr, void* i);
void* MWindow___findChildren_newList(void* ptr);
void* MWindow___children_atList(void* ptr, int i);
void MWindow___children_setList(void* ptr, void* i);
void* MWindow___children_newList(void* ptr);
void* MWindow_NewMWindow(void* parent, long long flags);
void MWindow_DestroyMWindow(void* ptr);
void* MWindow_CreatePopupMenuDefault(void* ptr);
char MWindow_EventDefault(void* ptr, void* event);
void MWindow_ContextMenuEventDefault(void* ptr, void* event);
void MWindow_SetAnimatedDefault(void* ptr, char enabled);
void MWindow_SetDockNestingEnabledDefault(void* ptr, char enabled);
void MWindow_SetUnifiedTitleAndToolBarOnMacDefault(void* ptr, char set);
char MWindow_CloseDefault(void* ptr);
char MWindow_FocusNextPrevChildDefault(void* ptr, char next);
char MWindow_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void MWindow_ActionEventDefault(void* ptr, void* event);
void MWindow_ChangeEventDefault(void* ptr, void* event);
void MWindow_CloseEventDefault(void* ptr, void* event);
void MWindow_DragEnterEventDefault(void* ptr, void* event);
void MWindow_DragLeaveEventDefault(void* ptr, void* event);
void MWindow_DragMoveEventDefault(void* ptr, void* event);
void MWindow_DropEventDefault(void* ptr, void* event);
void MWindow_EnterEventDefault(void* ptr, void* event);
void MWindow_FocusInEventDefault(void* ptr, void* event);
void MWindow_FocusOutEventDefault(void* ptr, void* event);
void MWindow_HideDefault(void* ptr);
void MWindow_HideEventDefault(void* ptr, void* event);
void MWindow_InputMethodEventDefault(void* ptr, void* event);
void MWindow_KeyPressEventDefault(void* ptr, void* event);
void MWindow_KeyReleaseEventDefault(void* ptr, void* event);
void MWindow_LeaveEventDefault(void* ptr, void* event);
void MWindow_LowerDefault(void* ptr);
void MWindow_MouseDoubleClickEventDefault(void* ptr, void* event);
void MWindow_MouseMoveEventDefault(void* ptr, void* event);
void MWindow_MousePressEventDefault(void* ptr, void* event);
void MWindow_MouseReleaseEventDefault(void* ptr, void* event);
void MWindow_MoveEventDefault(void* ptr, void* event);
void MWindow_PaintEventDefault(void* ptr, void* event);
void MWindow_RaiseDefault(void* ptr);
void MWindow_RepaintDefault(void* ptr);
void MWindow_ResizeEventDefault(void* ptr, void* event);
void MWindow_SetDisabledDefault(void* ptr, char disable);
void MWindow_SetEnabledDefault(void* ptr, char vbo);
void MWindow_SetFocus2Default(void* ptr);
void MWindow_SetHiddenDefault(void* ptr, char hidden);
void MWindow_SetStyleSheetDefault(void* ptr, char* styleSheet);
void MWindow_SetVisibleDefault(void* ptr, char visible);
void MWindow_SetWindowModifiedDefault(void* ptr, char vbo);
void MWindow_SetWindowTitleDefault(void* ptr, char* vqs);
void MWindow_ShowDefault(void* ptr);
void MWindow_ShowEventDefault(void* ptr, void* event);
void MWindow_ShowFullScreenDefault(void* ptr);
void MWindow_ShowMaximizedDefault(void* ptr);
void MWindow_ShowMinimizedDefault(void* ptr);
void MWindow_ShowNormalDefault(void* ptr);
void MWindow_TabletEventDefault(void* ptr, void* event);
void MWindow_UpdateDefault(void* ptr);
void MWindow_UpdateMicroFocusDefault(void* ptr);
void MWindow_WheelEventDefault(void* ptr, void* event);
void* MWindow_PaintEngineDefault(void* ptr);
void* MWindow_MinimumSizeHintDefault(void* ptr);
void* MWindow_SizeHintDefault(void* ptr);
void* MWindow_InputMethodQueryDefault(void* ptr, long long query);
char MWindow_HasHeightForWidthDefault(void* ptr);
int MWindow_HeightForWidthDefault(void* ptr, int w);
int MWindow_MetricDefault(void* ptr, long long m);
char MWindow_EventFilterDefault(void* ptr, void* watched, void* event);
void MWindow_ChildEventDefault(void* ptr, void* event);
void MWindow_ConnectNotifyDefault(void* ptr, void* sign);
void MWindow_CustomEventDefault(void* ptr, void* event);
void MWindow_DeleteLaterDefault(void* ptr);
void MWindow_DisconnectNotifyDefault(void* ptr, void* sign);
void MWindow_TimerEventDefault(void* ptr, void* event);
;
void MocLabel_ConnectUpdateLabel(void* ptr);
void MocLabel_DisconnectUpdateLabel(void* ptr);
void MocLabel_UpdateLabel(void* ptr, char* v0);
int MocLabel_MocLabel_QRegisterMetaType();
int MocLabel_MocLabel_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int MocLabel_MocLabel_QmlRegisterType();
void* MocLabel___addActions_actions_atList(void* ptr, int i);
void MocLabel___addActions_actions_setList(void* ptr, void* i);
void* MocLabel___addActions_actions_newList(void* ptr);
void* MocLabel___insertActions_actions_atList(void* ptr, int i);
void MocLabel___insertActions_actions_setList(void* ptr, void* i);
void* MocLabel___insertActions_actions_newList(void* ptr);
void* MocLabel___actions_atList(void* ptr, int i);
void MocLabel___actions_setList(void* ptr, void* i);
void* MocLabel___actions_newList(void* ptr);
void* MocLabel___dynamicPropertyNames_atList(void* ptr, int i);
void MocLabel___dynamicPropertyNames_setList(void* ptr, void* i);
void* MocLabel___dynamicPropertyNames_newList(void* ptr);
void* MocLabel___findChildren_atList2(void* ptr, int i);
void MocLabel___findChildren_setList2(void* ptr, void* i);
void* MocLabel___findChildren_newList2(void* ptr);
void* MocLabel___findChildren_atList3(void* ptr, int i);
void MocLabel___findChildren_setList3(void* ptr, void* i);
void* MocLabel___findChildren_newList3(void* ptr);
void* MocLabel___findChildren_atList(void* ptr, int i);
void MocLabel___findChildren_setList(void* ptr, void* i);
void* MocLabel___findChildren_newList(void* ptr);
void* MocLabel___children_atList(void* ptr, int i);
void MocLabel___children_setList(void* ptr, void* i);
void* MocLabel___children_newList(void* ptr);
void* MocLabel_NewMocLabel(void* parent, long long fo);
void* MocLabel_NewMocLabel2(char* text, void* parent, long long fo);
void MocLabel_DestroyMocLabel(void* ptr);
char MocLabel_EventDefault(void* ptr, void* e);
char MocLabel_FocusNextPrevChildDefault(void* ptr, char next);
void MocLabel_ChangeEventDefault(void* ptr, void* ev);
void MocLabel_ClearDefault(void* ptr);
void MocLabel_ContextMenuEventDefault(void* ptr, void* ev);
void MocLabel_FocusInEventDefault(void* ptr, void* ev);
void MocLabel_FocusOutEventDefault(void* ptr, void* ev);
void MocLabel_KeyPressEventDefault(void* ptr, void* ev);
void MocLabel_MouseMoveEventDefault(void* ptr, void* ev);
void MocLabel_MousePressEventDefault(void* ptr, void* ev);
void MocLabel_MouseReleaseEventDefault(void* ptr, void* ev);
void MocLabel_PaintEventDefault(void* ptr, void* vqp);
void MocLabel_SetMovieDefault(void* ptr, void* movie);
void MocLabel_SetNum2Default(void* ptr, double num);
void MocLabel_SetNumDefault(void* ptr, int num);
void MocLabel_SetPictureDefault(void* ptr, void* picture);
void MocLabel_SetPixmapDefault(void* ptr, void* vqp);
void MocLabel_SetTextDefault(void* ptr, char* vqs);
void* MocLabel_MinimumSizeHintDefault(void* ptr);
void* MocLabel_SizeHintDefault(void* ptr);
int MocLabel_HeightForWidthDefault(void* ptr, int w);
char MocLabel_CloseDefault(void* ptr);
char MocLabel_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void MocLabel_ActionEventDefault(void* ptr, void* event);
void MocLabel_CloseEventDefault(void* ptr, void* event);
void MocLabel_DragEnterEventDefault(void* ptr, void* event);
void MocLabel_DragLeaveEventDefault(void* ptr, void* event);
void MocLabel_DragMoveEventDefault(void* ptr, void* event);
void MocLabel_DropEventDefault(void* ptr, void* event);
void MocLabel_EnterEventDefault(void* ptr, void* event);
void MocLabel_HideDefault(void* ptr);
void MocLabel_HideEventDefault(void* ptr, void* event);
void MocLabel_InputMethodEventDefault(void* ptr, void* event);
void MocLabel_KeyReleaseEventDefault(void* ptr, void* event);
void MocLabel_LeaveEventDefault(void* ptr, void* event);
void MocLabel_LowerDefault(void* ptr);
void MocLabel_MouseDoubleClickEventDefault(void* ptr, void* event);
void MocLabel_MoveEventDefault(void* ptr, void* event);
void MocLabel_RaiseDefault(void* ptr);
void MocLabel_RepaintDefault(void* ptr);
void MocLabel_ResizeEventDefault(void* ptr, void* event);
void MocLabel_SetDisabledDefault(void* ptr, char disable);
void MocLabel_SetEnabledDefault(void* ptr, char vbo);
void MocLabel_SetFocus2Default(void* ptr);
void MocLabel_SetHiddenDefault(void* ptr, char hidden);
void MocLabel_SetStyleSheetDefault(void* ptr, char* styleSheet);
void MocLabel_SetVisibleDefault(void* ptr, char visible);
void MocLabel_SetWindowModifiedDefault(void* ptr, char vbo);
void MocLabel_SetWindowTitleDefault(void* ptr, char* vqs);
void MocLabel_ShowDefault(void* ptr);
void MocLabel_ShowEventDefault(void* ptr, void* event);
void MocLabel_ShowFullScreenDefault(void* ptr);
void MocLabel_ShowMaximizedDefault(void* ptr);
void MocLabel_ShowMinimizedDefault(void* ptr);
void MocLabel_ShowNormalDefault(void* ptr);
void MocLabel_TabletEventDefault(void* ptr, void* event);
void MocLabel_UpdateDefault(void* ptr);
void MocLabel_UpdateMicroFocusDefault(void* ptr);
void MocLabel_WheelEventDefault(void* ptr, void* event);
void* MocLabel_PaintEngineDefault(void* ptr);
void* MocLabel_InputMethodQueryDefault(void* ptr, long long query);
char MocLabel_HasHeightForWidthDefault(void* ptr);
int MocLabel_MetricDefault(void* ptr, long long m);
char MocLabel_EventFilterDefault(void* ptr, void* watched, void* event);
void MocLabel_ChildEventDefault(void* ptr, void* event);
void MocLabel_ConnectNotifyDefault(void* ptr, void* sign);
void MocLabel_CustomEventDefault(void* ptr, void* event);
void MocLabel_DeleteLaterDefault(void* ptr);
void MocLabel_DisconnectNotifyDefault(void* ptr, void* sign);
void MocLabel_TimerEventDefault(void* ptr, void* event);
;

#ifdef __cplusplus
}
#endif

#endif